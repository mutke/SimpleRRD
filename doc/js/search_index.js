var search_data = {"index":{"info":[["SimpleRRD","","SimpleRRD.html","","<p>Simplified Create, Read, Update, Delete wrapper for ruby’s RRDtool\nbindings.  Requires only <em>path</em> parameter, …\n"],["DS_NAME","SimpleRRD","SimpleRRD.html#method-c-DS_NAME","()",""],["SUPPORTED_KINDS","SimpleRRD","SimpleRRD.html#method-c-SUPPORTED_KINDS","()",""],["create","SimpleRRD","SimpleRRD.html#method-i-create","()","<p>Create RRD file using current configuration.\n<p>@return [boolean] false if already exists, configuration …\n"],["delete","SimpleRRD","SimpleRRD.html#method-i-delete","()","<p>Delete RRD file.\n<p>@return [boolean] false if object is not valid or if file is not writable\nby EUID. @return …\n"],["exists?","SimpleRRD","SimpleRRD.html#method-i-exists-3F","()","<p>Does the RRD file exist?\n<p>@return [boolean] true if RRD file currently exists at @path. @return [nil]\nnil …\n"],["last_update_time","SimpleRRD","SimpleRRD.html#method-i-last_update_time","()","<p>Get RRD file’s last update time.\n<p>@return [Time] RRD file’s last update time. @return [nil] nil if file …\n"],["new","SimpleRRD","SimpleRRD.html#method-c-new","(file_path=nil, timestamp=self.class.now)","<p>Create a SimpleRRD wrapper for RRD file.\n<p>@param [String] file_path Filesystem path of the RRD file. @param …\n"],["now","SimpleRRD","SimpleRRD.html#method-c-now","()","<p>Class method for calculating ‘now’.\n<p>Override in child classes with different needs (e.g. minute alignment) …\n"],["path=","SimpleRRD","SimpleRRD.html#method-i-path-3D","(new_path=nil)",""],["read","SimpleRRD","SimpleRRD.html#method-i-read","(seconds=86400)","<p>Read Array of values from RRD file.\n<p>Will attempt to read a value every @step seconds, but falls back to …\n"],["readable?","SimpleRRD","SimpleRRD.html#method-i-readable-3F","()","<p>RRD file exists, is readable, and configured as a SimpleRRD.\n<p>@return [boolean] true if readable by EUID …\n"],["update","SimpleRRD","SimpleRRD.html#method-i-update","(values=[])","<p>Write Array of values to RRD file.\n<p>@param [Array&lt;Float,Integer,nil&gt;] value Values to write.\n<p>@return …\n"],["valid?","SimpleRRD","SimpleRRD.html#method-i-valid-3F","()","<p>Are the Instance Variables all valid?\n<p>@return [boolean] true if object’s instance variables are valid …\n"],["writable?","SimpleRRD","SimpleRRD.html#method-i-writable-3F","()","<p>File exists and is writable.\n<p>@return [boolean] true if RRD at @path writable by current object w/EUID.\n…\n"]],"searchIndex":["simplerrd","ds_name()","supported_kinds()","create()","delete()","exists?()","last_update_time()","new()","now()","path=()","read()","readable?()","update()","valid?()","writable?()"],"longSearchIndex":["simplerrd","simplerrd::ds_name()","simplerrd::supported_kinds()","simplerrd#create()","simplerrd#delete()","simplerrd#exists?()","simplerrd#last_update_time()","simplerrd::new()","simplerrd::now()","simplerrd#path=()","simplerrd#read()","simplerrd#readable?()","simplerrd#update()","simplerrd#valid?()","simplerrd#writable?()"]}}